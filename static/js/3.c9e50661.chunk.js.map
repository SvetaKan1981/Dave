{"version":3,"sources":["components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profileinfo/ProfileStatus.jsx","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","postsElenents","posts","reverse","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizeduserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c9e50661.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1JZf1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1LNDP\",\"posts\":\"MyPosts_posts__3-lIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1fTsR\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component  {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n            <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n            </div>\r\n                }\r\n                {this.state.editMode &&\r\n            <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n        </div>\r\n       )\r\n   }\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) =>  {\r\n  \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus( e.currentTarget.value);\r\n    }\r\n        return (\r\n            <div>\r\n                { !editMode && \r\n            <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"hello\"}</span>\r\n            </div>\r\n                }\r\n                {editMode &&\r\n            <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                        value={status}/>\r\n                    </div>\r\n                }\r\n        </div>\r\n       )\r\n   }\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n      <div> \r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} alt=\"img\" />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n        \r\n      </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nconst Post = (props) => {\r\n\r\n  return (\r\n          <div className={s.item}>\r\n      <img src='https://www.meme-arsenal.com/memes/b83d2961a5e6759d700194d62acd1fc0.jpg' alt=\"img\" ></img>\r\n          { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n          </div>\r\n          </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\n//import { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  // let posts = [\r\n  //   {id: 1, message: 'Hi, how are you?', likesCount: 0 },\r\n  //   {id: 2, message: 'it\\'s my first post', likesCount: 23 },\r\n  // ]\r\n  let postsElenents =\r\n    [props.posts]\r\n      .reverse()\r\n      .map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n  \r\n\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {postsElenents}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\nlet AddNewPostForm = (props) => {\r\n        return(\r\n      <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n              <Field component={Textarea} placeholder={\"Post message\"} name=\"newPostText\"\r\n                validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n        )\r\n }\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\"}) (AddNewPostForm );\r\n\r\nexport default MyPosts;","//import React from 'react';\r\nimport { addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./Profileinfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n      <div> \r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      \r\n      <MyPostsContainer />\r\n      </div >\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizeduserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n      return (\r\n        <Profile {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus} />\r\n      )\r\n    }\r\n  }\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizeduserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter\r\n  )(ProfileContainer);\r\n\r\n"],"sourceRoot":""}